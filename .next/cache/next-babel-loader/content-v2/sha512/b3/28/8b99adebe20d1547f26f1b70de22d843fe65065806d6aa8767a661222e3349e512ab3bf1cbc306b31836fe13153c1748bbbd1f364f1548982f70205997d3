{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../services/prismic';\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport styles from './home.module.scss';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nexport default function Home({\n  postsPagination\n}) {\n  console.log({\n    postsPagination\n  });\n  const {\n    0: nextPage,\n    1: setNextPage\n  } = useState(postsPagination.next_page);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsPagination.results.map(post => {\n    return post;\n  }));\n\n  async function handleLoadMorePosts() {\n    await fetch(nextPage).then(results => results.json()).then(resultsJson => {\n      setNextPage(resultsJson.next_page);\n      setPosts([...posts, ...resultsJson.results]);\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      src: \"/images/logo.svg\",\n      alt: \"logo\"\n    }), posts.map(post => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: `/post/${post.uid}`,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: post.data.title\n          })\n        }), /*#__PURE__*/_jsx(\"p\", {\n          children: post.data.subtitle\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsxs(\"time\", {\n            children: [/*#__PURE__*/_jsx(FiCalendar, {}), format(new Date(post.first_publication_date), 'dd LLL yyyy', {\n              locale: ptBR\n            })]\n          }), /*#__PURE__*/_jsxs(\"span\", {\n            children: [/*#__PURE__*/_jsx(FiUser, {}), post.data.author]\n          })]\n        })]\n      }, post.uid);\n    }), nextPage && /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      onClick: handleLoadMorePosts,\n      children: \"Carregar mais posts...\"\n    })]\n  });\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.predicates.at('document.type', 'post')], {\n    pageSize: 1\n  });\n  const postsPagination = {\n    next_page: postsResponse.next_page,\n    results: postsResponse.results\n  };\n  return {\n    props: {\n      postsPagination\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}