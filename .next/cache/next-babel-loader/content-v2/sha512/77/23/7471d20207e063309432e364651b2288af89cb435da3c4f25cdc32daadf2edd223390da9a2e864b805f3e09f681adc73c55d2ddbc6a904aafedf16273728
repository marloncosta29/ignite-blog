{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marlon/projetos/Ignite/03-NEXT/desafio/ignite-blog/src/pages/post/[slug].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../../services/prismic';\nimport Header from '../../components/Header';\nexport default function Post({\n  post\n}) {\n  console.log({\n    post\n  });\n\n  if (!post) {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  const posts = await prismic.query([Prismic.predicates.at('document.type', 'post')], {\n    pageSize: 1\n  });\n  console.log(posts);\n  const paths = posts.results.map(item => {\n    return {\n      params: {\n        slug: item.uid\n      }\n    };\n  });\n  console.log(paths);\n  return {\n    paths,\n    fallback: true\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const {\n    slug\n  } = params;\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post', String(slug), {});\n\n  const post = _objectSpread(_objectSpread({}, response.data), {}, {\n    first_publication_date: response.first_publication_date\n  });\n\n  return {\n    props: {\n      post\n    }\n  };\n};","map":{"version":3,"sources":["/home/marlon/projetos/Ignite/03-NEXT/desafio/ignite-blog/src/pages/post/[slug].tsx"],"names":["Prismic","getPrismicClient","Header","Post","post","console","log","getStaticPaths","prismic","posts","query","predicates","at","pageSize","paths","results","map","item","params","slug","uid","fallback","getStaticProps","response","getByUID","String","data","first_publication_date","props"],"mappings":";;;;;;;;;;AAEA,OAAOA,OAAP,MAAoB,mBAApB;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AAKA,OAAOC,MAAP,MAAmB,yBAAnB;AAuBA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAmC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;;AACA,MAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;AAED,OAAO,MAAMG,cAAc,GAAG,YAAY;AACxC,QAAMC,OAAO,GAAGP,gBAAgB,EAAhC;AACA,QAAMQ,KAAK,GAAG,MAAMD,OAAO,CAACE,KAAR,CAClB,CAACV,OAAO,CAACW,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CAAD,CADkB,EAElB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAFkB,CAApB;AAIAR,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEA,QAAMK,KAAK,GAAGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBC,IAAI,IAAI;AACtC,WAAO;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEF,IAAI,CAACG;AAAb;AAAV,KAAP;AACD,GAFa,CAAd;AAGAf,EAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AAEA,SAAO;AAAEA,IAAAA,KAAF;AAASO,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CAdM;AAgBP,OAAO,MAAMC,cAA8B,GAAG,OAAO;AAAEJ,EAAAA;AAAF,CAAP,KAAsB;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;AACA,QAAMV,OAAO,GAAGP,gBAAgB,EAAhC;AACA,QAAMsB,QAAQ,GAAG,MAAMf,OAAO,CAACgB,QAAR,CAAiB,MAAjB,EAAyBC,MAAM,CAACN,IAAD,CAA/B,EAAuC,EAAvC,CAAvB;;AACA,QAAMf,IAAI,mCACLmB,QAAQ,CAACG,IADJ;AAERC,IAAAA,sBAAsB,EAAEJ,QAAQ,CAACI;AAFzB,IAAV;;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLxB,MAAAA;AADK;AADF,GAAP;AAKD,CAbM","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\nimport { useRouter } from 'next/router';\nimport Prismic from '@prismicio/client';\n\nimport { getPrismicClient } from '../../services/prismic';\n\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\n\nimport Header from '../../components/Header';\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({ post }: PostProps) {\n  console.log({ post });\n  if (!post) {\n    return;\n  }\n\n  return (\n    <>\n      <Header />\n    </>\n  );\n}\n\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  const posts = await prismic.query(\n    [Prismic.predicates.at('document.type', 'post')],\n    { pageSize: 1 }\n  );\n  console.log(posts);\n\n  const paths = posts.results.map(item => {\n    return { params: { slug: item.uid } };\n  });\n  console.log(paths);\n\n  return { paths, fallback: true };\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { slug } = params;\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post', String(slug), {});\n  const post = {\n    ...response.data,\n    first_publication_date: response.first_publication_date,\n  };\n  return {\n    props: {\n      post,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}