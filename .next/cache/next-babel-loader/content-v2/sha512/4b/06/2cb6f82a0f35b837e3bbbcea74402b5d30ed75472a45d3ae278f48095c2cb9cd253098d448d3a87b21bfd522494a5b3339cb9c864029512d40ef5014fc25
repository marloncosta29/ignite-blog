{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marlon/projetos/Ignite/03-NEXT/desafio/ignite-blog/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\nexport default function Home({\n  postsPagination\n}) {\n  console.log({\n    postsPagination\n  });\n  const {\n    0: nextPage,\n    1: setNextPage\n  } = useState(postsPagination.next_page);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsPagination.results.map(post => {\n    return post;\n  }));\n\n  async function handleLoadMorePosts() {\n    await fetch(nextPage).then(results => results.json()).then(resultsJson => {\n      console.log({\n        resultsJson\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/logo.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: post.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.data.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"time\", {\n            children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), post.first_publication_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), post.data.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, post.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    }), nextPage && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleLoadMorePosts,\n      children: \"Carregar mais posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.predicates.at('document.type', 'post')], {\n    pageSize: 1\n  });\n  const postsPagination = {\n    next_page: postsResponse.next_page,\n    results: postsResponse.results\n  };\n  return {\n    props: {\n      postsPagination\n    }\n  };\n};","map":{"version":3,"sources":["/home/marlon/projetos/Ignite/03-NEXT/desafio/ignite-blog/src/pages/index.tsx"],"names":["Prismic","getPrismicClient","styles","FiCalendar","FiUser","Link","useState","Home","postsPagination","console","log","nextPage","setNextPage","next_page","posts","setPosts","results","map","post","handleLoadMorePosts","fetch","then","json","resultsJson","container","data","title","subtitle","first_publication_date","author","uid","getStaticProps","prismic","postsResponse","query","predicates","at","pageSize","props"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Prismic from '@prismicio/client';\n\nimport { getPrismicClient } from '../services/prismic';\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { useState } from 'react';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({ postsPagination }: HomeProps) {\n  console.log({ postsPagination });\n  const [nextPage, setNextPage] = useState<string | null>(\n    postsPagination.next_page\n  );\n  const [posts, setPosts] = useState<Post[]>(\n    postsPagination.results.map(post => {\n      return post;\n    })\n  );\n\n  async function handleLoadMorePosts() {\n    await fetch(nextPage)\n      .then(results => results.json())\n      .then((resultsJson: PostPagination) => {\n        console.log({ resultsJson });\n      });\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src=\"/images/logo.svg\" alt=\"logo\" />\n      {posts.map(post => {\n        return (\n          <div key={post.uid} className={styles.post}>\n            <Link href=\"#\">\n              <a>{post.data.title}</a>\n            </Link>\n            <p>{post.data.subtitle}</p>\n            <div>\n              <time>\n                <FiCalendar />\n                {post.first_publication_date}\n              </time>\n              <span>\n                <FiUser />\n                {post.data.author}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n\n      {nextPage && (\n        <button type=\"button\" onClick={handleLoadMorePosts}>\n          Carregar mais posts...\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query(\n    [Prismic.predicates.at('document.type', 'post')],\n    { pageSize: 1 }\n  );\n  const postsPagination: PostPagination = {\n    next_page: postsResponse.next_page,\n    results: postsResponse.results,\n  };\n  return {\n    props: {\n      postsPagination,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}